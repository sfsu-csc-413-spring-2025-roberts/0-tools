package tools.writers;

import java.io.File;
import java.io.FileWriter;
import java.nio.file.Path;

import tools.grammar.Grammar;

public class TestVisitorWriter extends AstNodeWriter {

    public TestVisitorWriter(Grammar grammar) {
        super(grammar);
    }

    @Override
    public void write() throws Exception {
        File visitorFile = Path.of("tests", "helpers", "TestVisitor.java").toFile();
        if (visitorFile.exists()) {
            visitorFile.delete();
        }
        visitorFile.getParentFile().mkdirs();

        try (FileWriter writer = new FileWriter(visitorFile)) {
            writer.write(this.formattedLine("package tests.helpers;", 0, 2));

            writer.write(this.formattedLine("import java.util.List;", 0, 2));
            writer.write(this.formattedLine("import ast.*;", 0, 1));
            writer.write(this.formattedLine("import visitor.ASTVisitor;", 0, 2));

            writer.write(this.formattedLine(getAutoGeneratedComment(), 0, 1));
            writer.write(this.formattedLine("public class TestVisitor extends ASTVisitor {", 0, 2));

            writer.write(this.formattedLine("private final List<AST> expected;", 1, 1));
            writer.write(this.formattedLine("private int index;", 1, 2));

            writer.write(this.formattedLine("public TestVisitor(List<AST> expected) {", 1, 1));
            writer.write(this.formattedLine("this.expected = expected;", 2, 1));
            writer.write(this.formattedLine("this.index = 0;", 2, 1));
            writer.write(this.formattedLine("}", 1, 2));

            writer.write(this.formattedLine("public Object test(AST t) {", 1, 1));
            writer.write(this.formattedLine("", 2, 1));

            writer.write(this.formattedLine("}", 0, 1));
        }
    }
}
