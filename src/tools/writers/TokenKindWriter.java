package tools.writers;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.List;

import tools.grammar.Grammar;

public class TokenKindWriter extends AutoGeneratedFileWriter {

    private File file;

    public TokenKindWriter(Grammar grammar) {
        super(grammar);

        this.file = new File("src/lexer/daos/TokenKind.java");
    }

    @Override
    public void write() throws Exception {
        Files.createDirectories(Path.of(this.file.getParent()));
        if (file.exists()) {
            file.delete();
        }

        try (FileWriter writer = new FileWriter(file)) {
            writer.write(this.formattedLine("package lexer.daos;", 0, 2));

            writer.write(this.formattedLine(getAutoGeneratedComment(), 0, 1));
            writer.write(this.formattedLine("public enum TokenKind {", 0, 2));

            writer.write(this.formattedLine("// Internal token kinds", 1, 1));
            this.writeTokens(writer, List.of("BogusToken", "EOF"));

            writer.write(this.formattedLine("// Keywords", 1, 1));
            List<String> keywords = this.grammar.getKeywords().stream()
                    .map(keyword -> this.grammar.getSymbolicConstant(keyword).getConstantName()).toList();
            this.writeTokens(writer, keywords);

            writer.write(this.formattedLine("// Operators", 1, 1));
            List<String> operators = this.grammar.getOperators().stream()
                    .map(operator -> this.grammar.getSymbolicConstant(operator).getConstantName()).toList();
            this.writeTokens(writer, operators);

            writer.write(this.formattedLine("// Separators", 1, 1));
            List<String> separators = this.grammar.getSeparators().stream()
                    .map(separator -> this.grammar.getSymbolicConstant(separator).getConstantName()).toList();
            this.writeTokens(writer, separators);

            writer.write(this.formattedLine("}", 0, 1));
            writer.flush();
            writer.close();
        }
    }

    private void writeTokens(FileWriter writer, List<String> tokens) throws IOException {
        List<String> temp = new ArrayList<>();
        int lineSize = 5;

        for (int i = 0; i < tokens.size(); i += lineSize) {

            for (int j = i; j < tokens.size() && j < i + lineSize; j++) {
                temp.add(tokens.get(j));
            }

            String line = String.format("%s,", String.join(", ", temp));

            writer.write(this.formattedLine(line, 1));
            temp.clear();
        }

        writer.write(this.formattedLine("", 0));
    }
}
