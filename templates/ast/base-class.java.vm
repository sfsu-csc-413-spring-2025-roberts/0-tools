package $astPackageName;

import java.util.List;
import java.util.ArrayList;

import $visitorPackageName.$visitorClassName;

/**
 * This file is automatically generated by the compiler tools.
 * Do not manually update! (Use the CompilerTools to regenerate.)
 **/
public abstract class $astClassName {

    public static int NodeCounter = 0;

    private int nodeNumber;
    private List<$astClassName> children;
    private $astClassName decoration;
    private String label;
    private int frameOffset;

    public $astClassName() {
        this.nodeNumber = ${astClassName}.NodeCounter++;
        this.children = new ArrayList<>();
    }

    public int getNodeNumber() {
        return this.nodeNumber;
    }

    public $astClassName addChild($astClassName child) {
        this.children.add(child);

        return this;
    }

    public $astClassName getChild(int index) {
        if (index < 0 || index >= this.children.size()) {
            return null;
        }

        return this.children.get(index);
    }

    public int getChildCount() {
        return this.children.size();
    }

    public List<$astClassName> getChildren() {
        return List.copyOf(this.children);
    }

    public $astClassName getDecoration() {
        return this.decoration;
    }

    public void setDecoration($astClassName decoration) {
        this.decoration = decoration;
    }

    public String getLabel() {
        return this.label;
    }

    public void setLabel(String label) {
        this.label = label;
    }

    public int getFrameOffset() {
        return this.frameOffset;
    }

    public void setFrameOffset(int frameOffset) {
        this.frameOffset = frameOffset;
    }

    public abstract Object accept($visitorClassName visitor) throws Exception;

}
